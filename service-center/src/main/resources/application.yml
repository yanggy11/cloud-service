spring:
  application:
    name: service-center
  kafka:
    bootstrap-servers: 39.107.97.132:9092
    producer:
      retries: 0
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: logstash
      auto-offset-reset: earliest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-commit-interval: 100s
  security:
    user:
      name: derrick
      password: 123456

server:
  port: 8000

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  server:
    enable-self-preservation: false			# 设为false，关闭自我保护
    eviction-interval-timer-in-ms: 5000
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8000/eureka/
#---
#spring:
#  profiles: peer1
#server:
#  port: 8000
#
#eureka:
#  instance:
#    hostname: peer1
#  server:
#    enable-self-preservation: false			# 设为false，关闭自我保护
#    eviction-interval-timer-in-ms: 5000
#  client:
#    registerWithEureka: true
#    fetchRegistry: false
#    serviceUrl:
#      defaultZone: http://peer2:8000/eureka/
#
#---
#spring:
#  profiles: peer2
#server:
#  port: 8000
#
#eureka:
#  instance:
#    hostname: peer2
#  server:
#    enable-self-preservation: false			# 设为false，关闭自我保护
#    eviction-interval-timer-in-ms: 5000
#  client:
#    fetchRegistry: false
#    registerWithEureka: true
#    serviceUrl:
#      defaultZone: http://peer1:8000/eureka/
